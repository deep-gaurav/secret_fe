type LockedMessages {
  reason: String!
}

type Message {
  id: String!
  creatorId: String!
  message: String!
  secretId: String!
  creator: User!
}

type Mutation {
  signup(name: String!): User!
  createSecret(title: String!, message: String!): Secret!
  createMessage(secretId: String!, message: String!): Message!
}

type Query {
  user: User
  secret(secretId: String!): Secret!
}

type Secret {
  id: String!
  title: String!
  creatorId: String!
  limitNumber: Int
  creator: User!
  messages: SecretMessages!
}

union SecretMessages = LockedMessages | UnlockedMessages

type UnlockedMessages {
  messages: [Message!]!
}

type User {
  id: String!
  name: String!
  secrets: [Secret!]!
}
